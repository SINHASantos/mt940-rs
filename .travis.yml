language: rust

rust:
  - stable
  - beta
  - nightly

os:
  - linux
  - osx
  - windows

env:
  - TARGET=default
  - TARGET=wasm32-unknown-unknown
  - TARGET=wasm32-unknown-emscripten

before_script: |
  if [[ "$TARGET" != "default" ]]; then
    rustup target add $TARGET
  fi
  if [[ "$TARGET" == "wasm32-unknown-emscripten" ]]; then
    cargo install cargo-web
  fi
  if [[ "$TRAVIS_RUST_VERSION" == nightly && "$TRAVIS_OS_NAME" == "linux" ]]; then
    # We need this due to https://github.com/xd009642/tarpaulin/issues/161
    curl -q https://gist.githubusercontent.com/jix/4342dd522a7125a2803c6edeedd8735c/raw/8c9fbe63bee722ff484215479e836ab714de1b9b/rustc-proptest-fix > rustc-proptest-fix
    chmod +x rustc-proptest-fix
    RUSTFLAGS="--cfg procmacro2_semver_exempt" cargo install cargo-tarpaulin
  fi

script:
  - |
    if [[ "$TARGET" == "wasm32-unknown-unknown" ]]; then
      cargo build --target $TARGET --verbose --all
    elif [[ "$TARGET" == "wasm32-unknown-emscripten" ]]; then
      cargo web build --target $TARGET --verbose
    else
      cargo build --verbose --all
    fi
  - |
    if [[ "$TARGET" == "default" ]]; then
      cargo test --verbose --all
    fi

after_success: |
  if [[ "$TRAVIS_RUST_VERSION" == nightly && "$TRAVIS_OS_NAME" == "linux" ]]; then
    RUSTC=./rustc-proptest-fix cargo tarpaulin --out Xml
    bash <(curl -s https://codecov.io/bash)
  fi
